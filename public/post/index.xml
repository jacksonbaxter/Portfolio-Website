<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jackson Baxter</title><link>https://jacksonbaxter.xyz/post/</link><description>Recent content in Posts on Jackson Baxter</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jacksonbaxter.xyz/post/index.xml" rel="self" type="application/rss+xml"/><item><title>LLM to SQL Group Project</title><link>https://jacksonbaxter.xyz/post/llm-sql-post/</link><pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate><guid>https://jacksonbaxter.xyz/post/llm-sql-post/</guid><description>Here is the source code and post for my LLM to SQL group project for a Database class.
https://github.com/pined1/LLM_SQL
Natural Language SQL Project Purpose of the Database My database models vendor and product data for a marketplace application, which includes vendors, their products, customer ratings, and orders.
Schema Query I thought it did well on Question: Which vendors have the highest rating?
GPT SQL Response:
SELECT Vendors.VendorID, Vendors.VendorName, MAX(Ratings.RatingValue) as MaxRating FROM Vendors INNER JOIN Ratings ON Vendors.</description></item><item><title>High Performance Cache in Rust Project</title><link>https://jacksonbaxter.xyz/post/high-performance-cache-post/</link><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate><guid>https://jacksonbaxter.xyz/post/high-performance-cache-post/</guid><description>For my final project for my database modeling class at BYU I decided to combine my desire to learn more Rust and fulfill the following requirements at the same time:
Features Caching layer non-persistent (e.g. Redis) and persistent layer (e.g. Postgres SQL). (See https://redis.com/wp-content/uploads/2023/04/redis-enterprise-for-caching.pdf) In-memory cache (fastest, but volatile) Redis cache (medium speed, distributed) PostgreSQL database (persistent storage) Support 5000 read requests per second with subsecond average latency on each request.</description></item><item><title>First Post</title><link>https://jacksonbaxter.xyz/post/first-post/</link><pubDate>Sun, 22 Dec 2024 00:00:00 +0000</pubDate><guid>https://jacksonbaxter.xyz/post/first-post/</guid><description>This is my first post.</description></item></channel></rss>