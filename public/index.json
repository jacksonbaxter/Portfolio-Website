[{"authors":null,"categories":["Projects"],"content":"For my final project for my database modeling class at BYU I decided to combine my desire to learn more Rust and fulfill the following requirements at the same time:\nFeatures Caching layer non-persistent (e.g. Redis) and persistent layer (e.g. Postgres SQL). (See https://redis.com/wp-content/uploads/2023/04/redis-enterprise-for-caching.pdf) In-memory cache (fastest, but volatile) Redis cache (medium speed, distributed) PostgreSQL database (persistent storage) Support 5000 read requests per second with subsecond average latency on each request. Support 5000 write requests per second with subsecond average latency on each request. High Concurrency It was a great challenge but also one of the most fun projects I had all of last semester due to the amount of learning I was able to do all with one project.\nBelow is the post I put into the class Discord to explain my project that has the relevant information. Thanks for reading!\nHigh Performance Caching Final Project by Jackson Baxter My project is designed to enable a highly performant, layered, and scalable caching system. I built it in Rust so that I can safely use a very minimal amount of resources or large amount at scale. This is acheived through also using in-memory caching first, then Redis non-persistent storage, then PostgreSQL. Lastly, it is very easy to deploy thanks to Docker.\nGithub Link https://github.com/jacksonbaxter/high-performace-cache\nKey learnings Low-level and efficient languages like Rust enable high scalability and low resource use even for big databases. Docker made tying multiple systems like Redis and PostgreSQL much easier. Using the already useful connective frameworks for Redis within Rust made layering and concurrency much easier and much more stable. Failover Strategy Everything is save in persistent storage through PostgreSQL through consistent health checks.\nCharacteristics Caching layer non-persistent (e.g. Redis) and persistent layer (e.g. Postgres SQL). (See https://redis.com/wp-content/uploads/2023/04/redis-enterprise-for-caching.pdf) In-memory cache (fastest, but volatile) Redis cache (medium speed, distributed) PostgreSQL database (persistent storage) Support 5000 read requests per second with subsecond average latency on each request. Support 5000 write requests per second with subsecond average latency on each request. High Concurrency Video https://youtu.be/PhfE7N2PJmk\nFeel free to provide any feedback or questions!\n","date":1735689600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1735689600,"objectID":"d4027a36e39b715315189796f01e4839","permalink":"https://jacksonbaxter.xyz/post/high-performance-cache-post/","publishdate":"2025-01-01T00:00:00Z","relpermalink":"/post/high-performance-cache-post/","section":"post","summary":"For my final project for my database modeling class at BYU I decided to combine my desire to learn more Rust and fulfill the following requirements at the same time:\nFeatures Caching layer non-persistent (e.g. Redis) and persistent layer (e.g. Postgres SQL). (See https://redis.com/wp-content/uploads/2023/04/redis-enterprise-for-caching.pdf) In-memory cache (fastest, but volatile) Redis cache (medium speed, distributed) PostgreSQL database (persistent storage) Support 5000 read requests per second with subsecond average latency on each request.","tags":["Rust","Database"],"title":"High Performance Cache in Rust Project","type":"post"},{"authors":null,"categories":null,"content":"I’m Jackson Baxter, a software developer based in Provo, Utah.\n","date":1734825600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1734825600,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://jacksonbaxter.xyz/about/","publishdate":"2024-12-22T00:00:00Z","relpermalink":"/about/","section":"","summary":"I’m Jackson Baxter, a software developer based in Provo, Utah.","tags":null,"title":"About","type":"page"},{"authors":null,"categories":null,"content":"This is my first post.\n","date":1734825600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1734825600,"objectID":"2891ef7ac669613ed704a6ee4440ca95","permalink":"https://jacksonbaxter.xyz/post/first-post/","publishdate":"2024-12-22T00:00:00Z","relpermalink":"/post/first-post/","section":"post","summary":"This is my first post.","tags":null,"title":"First Post","type":"post"}]